name: Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    permissions:
      contents: write

    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
            ext: ''
            args: ''
          - os: macos-latest
            rust_target: x86_64-apple-darwin
            ext: ''
            args: ''
          - os: macos-latest
            rust_target: aarch64-apple-darwin
            ext: ''
            args: ''
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
            ext: ''
            args: ''
          - os: windows-latest
            rust_target: aarch64-pc-windows-msvc
            ext: ''
            args: ''

    steps:
    - uses: actions/checkout@v3

    - name: Add target
      id: add-target
      run: |
        rustup target add ${{matrix.config.rust_target}}
        echo "commitHash=${GITHUB_SHA:0:9}" >> $GITHUB_OUTPUT

    - name: Build
      run: cargo build --release --target ${{matrix.config.rust_target}}

    - uses: actions/upload-artifact@v4.3.1
      name: Upload Windows Artifact
      if: ${{ matrix.config.os == 'windows-latest' }}
      with:
        path: target/${{matrix.config.rust_target}}/release/caie-code-installer.exe
        retention-days: 7
        name: caie-code-installer-${{matrix.config.rust_target}}-${{steps.add-target.outputs.commitHash}}

    - uses: actions/upload-artifact@v4.3.1
      name: Upload (macOS & Linux) Artifact
      if: ${{ matrix.config.os != 'windows-latest' }}
      with:
        path: target/${{matrix.config.rust_target}}/release/caie-code-installer
        retention-days: 7
        name: caie-code-installer-${{matrix.config.rust_target}}-${{steps.add-target.outputs.commitHash}}
